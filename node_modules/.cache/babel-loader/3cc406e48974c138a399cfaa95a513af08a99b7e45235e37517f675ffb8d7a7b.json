{"ast":null,"code":"var _jsxFileName = \"D:\\\\stickitize\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session on mount\n    const session = localStorage.getItem('adminSession');\n    if (session) {\n      setIsAuthenticated(true);\n    }\n    setIsLoading(false);\n  }, []);\n  const login = (adminId, password) => {\n    // Hardcoded credentials for now\n    if (adminId === 'elena' && password === 'ankitrocks') {\n      setIsAuthenticated(true);\n      localStorage.setItem('adminSession', 'true');\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('adminSession');\n  };\n  if (isLoading) {\n    return null; // Or a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"QGOAXroSjAVQAlauW9LqDUcn+wM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","session","localStorage","getItem","login","adminId","password","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/stickitize/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for existing session on mount\r\n    const session = localStorage.getItem('adminSession');\r\n    if (session) {\r\n      setIsAuthenticated(true);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (adminId, password) => {\r\n    // Hardcoded credentials for now\r\n    if (adminId === 'elena' && password === 'ankitrocks') {\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('adminSession', 'true');\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('adminSession');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return null; // Or a loading spinner\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACpD,IAAIF,OAAO,EAAE;MACXH,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IACAE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IACnC;IACA,IAAID,OAAO,KAAK,OAAO,IAAIC,QAAQ,KAAK,YAAY,EAAE;MACpDR,kBAAkB,CAAC,IAAI,CAAC;MACxBI,YAAY,CAACK,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;MAC5C,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBV,kBAAkB,CAAC,KAAK,CAAC;IACzBI,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,IAAIV,SAAS,EAAE;IACb,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEO,KAAK;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAC7DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CArCWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAuCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/B,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}